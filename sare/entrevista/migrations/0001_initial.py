# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2018-05-14 12:30
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Entrevista',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('per_renda_bruta', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Renda Bruta Familiar')),
                ('per_dependentes', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Despesa de Renda')),
                ('per_imposto_renda', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Imposto de Renda')),
                ('per_previdencia', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Previd\xeancia')),
                ('d_tratamento_saude', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Tratamento de Sa\xfade')),
                ('d_medicamentos', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Medicamentos')),
                ('d_cuidador', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Cuidador/Idoso/PNE')),
                ('d_plano_saude', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Plano de Sa\xfade')),
                ('d_educacao_superior', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Educa\xe7\xe3o Superior')),
                ('d_ensino_basico', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Ensino B\xe1sico')),
                ('d_cursos_prep', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Cursos Preparat\xf3rios')),
                ('d_capacitacao', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Capacita\xe7\xe3o')),
                ('d_transporte', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Transporte')),
                ('d_aluguel', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Aluguel/Financiamento')),
                ('d_financiamento_carro', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Financiamento de carro')),
                ('d_financiamento_moto', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Financiamento de moto')),
                ('d_terreno', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Terreno/Lote')),
                ('d_energia', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Energia')),
                ('d_agua', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='\xc1gua')),
                ('d_alimentacao', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Alimenta\xe7\xe3o')),
                ('cl_1', models.BooleanField(default=False, verbose_name='C\xf3pia Leg\xedvel do RG e CPF do candidato')),
                ('cl_2', models.BooleanField(default=False, verbose_name='C\xf3pia Leg\xedvel do RG e CPF do respons\xe1vel legal (caso o candidato seja menor de idade)')),
                ('cl_3', models.BooleanField(default=False, verbose_name='Comprovante de renda recente de todos os integrantes do grupo familiar que trabalham (que residem juntos)')),
                ('cl_4', models.BooleanField(default=False, verbose_name='N\xe3o tendo comprovante de renda, apresentar declara\xe7\xe3o de aus\xeancia de renda, conforme o modelo ANEXO I')),
                ('cl_5', models.BooleanField(default=False, verbose_name='Comprovante de desemprego (se for o caso apresentar carteira de trabalho - folha de rosto e as p\xe1ginas com registros -, aviso pr\xe9vio ou outro documento que comprove a situa\xe7\xe3o     de desmprego) ou decalra\xe7\xe3o de aus\xeancia de renda conforme modelo ANEXO II')),
                ('cl_6', models.BooleanField(default=False, verbose_name='Comprovante de pagamento de aluguel (se for o caso) de  pagamento de presta\xe7\xe3o da casa pr\xf3pira (se im\xf3vel financiado)')),
                ('cl_7', models.BooleanField(default=False, verbose_name='Comprovante recente de despesa com conta de \xe1gua')),
                ('cl_8', models.BooleanField(default=False, verbose_name='Comprovante recente de despesa com conta de energia')),
                ('cl_9', models.BooleanField(default=False, verbose_name='Comprovante recente de pens\xe3o aliment\xedcia (paga ou recebida pelo estudante), caso se enquadre em seu contexto sociofamiliar, conforme     modelo ANEXO III ou ANEXO IV')),
                ('cl_10', models.BooleanField(default=False, verbose_name='Comprovante do N\xfamero de Inscri\xe7\xe3o Social - NIS, (Folha Resumo do Cad\xfanico), caso se enquadre em seu contexto sociofamiliar')),
                ('cl_11', models.BooleanField(default=False, verbose_name='Aos candidatos que concorrem no perfil II, na modalidade creche, dever\xe3o apresentar a c\xf3pia de certid\xe3o de nascimento dos filhos')),
                ('sp_1', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Dependente financeiro e sofre algum tipo de viol\xeancia do respons\xe1vel pelo seu sustento')),
                ('sp_2', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Veio de outra localidade com objetivo de estudar no IFTO')),
                ('sp_3', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Utiliza transporte intermunicipal o u rural para acessar o Campus')),
                ('sp_4', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Ser estudante em tempo integral')),
                ('sp_5', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Residir distante do Campus')),
                ('sp_6', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Necessita fazer refei\xe7\xf5es di\xe1rias no Campus')),
                ('sp_7', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Possui filhos entre 0 e 12 anos que estudam em institui\xe7\xf5es privadas')),
                ('sp_8', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Necessidade de pagar cuidador (idoso/crian\xe7a) por n\xe3o possuir nenhum respons\xe1vel durante o per\xedodo que est\xe1 estudando no Campus')),
                ('sp_9', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Morar com o(s) filho(s) no mesmo ambiente familiar')),
                ('sp_10', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Desenvolver ou praticar qualquer modadilidade esportiva no Campus com acompanhamento do Professor')),
                ('sp_11', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Frequentar curso que esija material de uso pessoal e que seja espec\xedfico do curso')),
                ('sp_12', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Ter carga hor\xe1ria dispon\xedvel que n\xe3o afete o desenvolvimento escolar')),
                ('sp_13', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Estudante vai ao Campus mais de 3 dias na semana para cursar disciplinas')),
                ('sp_14', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Aluno sai do trabalho e vai direto para o Campus')),
                ('sp_15', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Situa\xe7\xe3o de doen\xe7a cr\xf4nica ou grave impacto na renda familiar')),
                ('sp_16', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='N\xe3o tem com quem deixar o(s) filho(s) para estudar')),
                ('fn_1', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Condi\xe7\xe3o de renda oriunda da informalidade')),
                ('fn_2', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Adulto ou chefe de fam\xedlia com baixa escolaridade')),
                ('fn_3', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Depend\xeancia de renda de idoso')),
                ('fn_4', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Domic\xedlio em prec\xe1rio estado de constru\xe7\xe3o apresentando sinais de fragilidades na estrutura')),
                ('fn_5', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Aluno com problemas graves indentificadas durante a entrevista')),
                ('fn_6', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Condi\xe7\xe3o de renda oriunda da informalidade')),
                ('fn_7', models.TextField(blank=True, max_length=800, null=True, verbose_name='Justifique')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Aluno')),
            ],
        ),
    ]
